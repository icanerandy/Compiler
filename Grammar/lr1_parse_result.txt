Syntax parsing start!
---------------------------------------------------------------------
处理第0个token --- (MAIN_ID,  main)			行列：(2 , 1)
选择了产生式<声明语句列表> -> <epsilon> 进行归约
处理第0个token --- (MAIN_ID,  main)			行列：(2 , 1)
处理第1个token --- (SOP,  ()			行列：(2 , 5)
处理第2个token --- (SOP,  ))			行列：(2 , 6)
处理第3个token --- (SOP,  {)			行列：(3 , 1)
处理第4个token --- (keyword,  if)			行列：(4 , 5)
处理第5个token --- (SOP,  ()			行列：(4 , 8)
处理第6个token --- (<变量>,  x)			行列：(4 , 9)
处理第7个token --- (COP,  ==)			行列：(4 , 11)
选择了产生式<因子> -> <变量> 进行归约
处理第7个token --- (COP,  ==)			行列：(4 , 11)
选择了产生式<项> -> <因子> 进行归约
处理第7个token --- (COP,  ==)			行列：(4 , 11)
选择了产生式<算术表达式> -> <项> 进行归约
处理第7个token --- (COP,  ==)			行列：(4 , 11)
处理第8个token --- (<字符串常量>,  "hello world")			行列：(4 , 14)
选择了产生式<关系运算符> -> == 进行归约
处理第8个token --- (<字符串常量>,  "hello world")			行列：(4 , 14)
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<因子> -> <字符串常量> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<项> -> <因子> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<算术表达式> -> <项> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<关系表达式> -> <算术表达式> <关系运算符> <算术表达式> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<简单表达式> -> <布尔表达式> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
选择了产生式<表达式> -> <简单表达式> 进行归约
处理第9个token --- (SOP,  ))			行列：(4 , 27)
处理第10个token --- (<函数名>,  printf)			行列：(5 , 9)
处理第11个token --- (SOP,  ()			行列：(5 , 15)
处理第12个token --- (<字符串常量>,  "hahahahahaha")			行列：(5 , 16)
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<因子> -> <字符串常量> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<项> -> <因子> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<算术表达式> -> <项> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<关系表达式> -> <算术表达式> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<简单表达式> -> <布尔表达式> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<表达式> -> <简单表达式> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
选择了产生式<实参列表> -> <表达式> 进行归约
处理第13个token --- (SOP,  ))			行列：(5 , 30)
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<函数调用> -> <函数名> ( <实参列表> ) 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<因子> -> <函数调用> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<项> -> <因子> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<算术表达式> -> <项> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<关系表达式> -> <算术表达式> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<简单表达式> -> <布尔表达式> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
选择了产生式<表达式> -> <简单表达式> 进行归约
处理第14个token --- (EOP,  ;)			行列：(5 , 31)
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<数据处理语句> -> <表达式> ; 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<循环执行语句> -> <数据处理语句> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<循环语句> -> <循环执行语句> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<if-tail> -> <epsilon> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<if语句> -> if ( <表达式> ) <循环语句> <if-tail> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<控制语句> -> <if语句> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<执行语句> -> <控制语句> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
选择了产生式<语句> -> <执行语句> 进行归约
处理第15个token --- (keyword,  while)			行列：(7 , 5)
处理第16个token --- (SOP,  ()			行列：(7 , 11)
处理第17个token --- (<变量>,  n)			行列：(7 , 12)
处理第18个token --- (COP,  <)			行列：(7 , 14)
选择了产生式<因子> -> <变量> 进行归约
处理第18个token --- (COP,  <)			行列：(7 , 14)
选择了产生式<项> -> <因子> 进行归约
处理第18个token --- (COP,  <)			行列：(7 , 14)
选择了产生式<算术表达式> -> <项> 进行归约
处理第18个token --- (COP,  <)			行列：(7 , 14)
处理第19个token --- (<常数>,  10)			行列：(7 , 16)
选择了产生式<关系运算符> -> < 进行归约
处理第19个token --- (<常数>,  10)			行列：(7 , 16)
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<因子> -> <常数> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<项> -> <因子> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<算术表达式> -> <项> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<关系表达式> -> <算术表达式> <关系运算符> <算术表达式> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<简单表达式> -> <布尔表达式> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
选择了产生式<表达式> -> <简单表达式> 进行归约
处理第20个token --- (SOP,  ))			行列：(7 , 18)
处理第21个token --- (SOP,  {)			行列：(8 , 5)
处理第22个token --- (keyword,  char)			行列：(9 , 9)
处理第23个token --- (<变量>,  v)			行列：(9 , 14)
选择了产生式<数据类型> -> char 进行归约
处理第23个token --- (<变量>,  v)			行列：(9 , 14)
处理第24个token --- (AOP,  =)			行列：(9 , 16)
处理第25个token --- (<字符常量>,  'a')			行列：(9 , 18)
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<因子> -> <字符常量> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<项> -> <因子> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<算术表达式> -> <项> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<关系表达式> -> <算术表达式> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
选择了产生式<单变量声明> -> <变量> = <布尔表达式> 进行归约
处理第26个token --- (EOP,  ;)			行列：(9 , 21)
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
选择了产生式<变量声明表> -> <单变量声明> ; 进行归约
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
选择了产生式<变量声明> -> <数据类型> <变量声明表> 进行归约
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
选择了产生式<值声明> -> <变量声明> 进行归约
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
选择了产生式<声明语句> -> <值声明> 进行归约
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
选择了产生式<循环语句> -> <声明语句> 进行归约
处理第27个token --- (<变量>,  n)			行列：(10 , 9)
处理第28个token --- (AOP,  =)			行列：(10 , 11)
处理第29个token --- (<变量>,  n)			行列：(10 , 13)
处理第30个token --- (OOP,  +)			行列：(10 , 15)
选择了产生式<因子> -> <变量> 进行归约
处理第30个token --- (OOP,  +)			行列：(10 , 15)
选择了产生式<项> -> <因子> 进行归约
处理第30个token --- (OOP,  +)			行列：(10 , 15)
处理第31个token --- (<常数>,  1)			行列：(10 , 17)
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<因子> -> <常数> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<项> -> <因子> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<算术表达式> -> <项> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<算术表达式> -> <项> + <算术表达式> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<关系表达式> -> <算术表达式> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<布尔因子> -> <关系表达式> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<布尔项> -> <布尔因子> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<布尔表达式> -> <布尔项> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<赋值表达式> -> <变量> = <布尔表达式> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
选择了产生式<表达式> -> <赋值表达式> 进行归约
处理第32个token --- (EOP,  ;)			行列：(10 , 18)
处理第33个token --- (SOP,  })			行列：(11 , 5)
选择了产生式<数据处理语句> -> <表达式> ; 进行归约
处理第33个token --- (SOP,  })			行列：(11 , 5)
选择了产生式<循环执行语句> -> <数据处理语句> 进行归约
处理第33个token --- (SOP,  })			行列：(11 , 5)
选择了产生式<循环语句> -> <循环执行语句> 进行归约
处理第33个token --- (SOP,  })			行列：(11 , 5)
选择了产生式<循环语句表> -> <循环语句> 进行归约
处理第33个token --- (SOP,  })			行列：(11 , 5)
选择了产生式<循环语句表> -> <循环语句> <循环语句表> 进行归约
处理第33个token --- (SOP,  })			行列：(11 , 5)
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<循环用复合语句> -> { <循环语句表> } 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<循环语句> -> <循环用复合语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<while语句> -> while ( <表达式> ) <循环语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<控制语句> -> <while语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<执行语句> -> <控制语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<语句> -> <执行语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<语句表> -> <语句> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
选择了产生式<语句表> -> <语句> <语句表> 进行归约
处理第34个token --- (SOP,  })			行列：(12 , 1)
处理第35个token --- (EOF,  #)			行列：(12 , 2)
选择了产生式<复合语句> -> { <语句表> } 进行归约
处理第35个token --- (EOF,  #)			行列：(12 , 2)
选择了产生式<MAIN函数定义> -> MAIN_ID ( ) <复合语句> 进行归约
处理第35个token --- (EOF,  #)			行列：(12 , 2)
选择了产生式<函数定义列表> -> <epsilon> 进行归约
处理第35个token --- (EOF,  #)			行列：(12 , 2)
选择了产生式<程序> -> <声明语句列表> <MAIN函数定义> <函数定义列表> 进行归约
处理第35个token --- (EOF,  #)			行列：(12 , 2)
语法分析成功！
---------------------------------------------------------------------
